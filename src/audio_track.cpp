#include "audio.hpp"
#include "track.hpp"
#include "COM.hpp"
#include "video.hpp"

#ifndef AUDIO_TRACK
#define AUDIO_TRACK_MAIN

static AUDIO_TRACK MEDIA_TYPE(bool)
{
	AUDIO_TRACK::IS_VIDEO || AUDIO_TRACK::IS_AUDIO;
	return;
}

static AUDIO_TRACK INVERT_PHASE(bool)
{
	AUDIO_TRACK::RESULT == false;
	AUDIO_TRACK::INVERT_PHASE;
	return;
}

static AUDIO_TRACK VOLUME(float)
{
	AUDIO_TRACK::VOLUME_RESULT;
	TRACK_COM::GET_AUDIO_VOLUME_TRIM(TRACK_EVENT::TRACK_ID, AUDIO_TRACK::VOLUME_RESULT);
	return;

	TRACK_COM::SET_AUDIO_VOLUME_TRIM(TRACK_EVENT::TRACK_ID, AUDIO_TRACK::VOLUME_RESULT);
}

static AUDIO_TRACK AUTO_X_PAN(float)
{
	AUDIO_TRACK::VOLUME_RESULT;
	TRACK_COM::GET_AUDIO_PAN_X(TRACK_EVENT::TRACK_ID, AUDIO_TRACK::VOLUME_RESULT);
}

static AUDIO_AUTO_CONTROL PAN_STATE()
{
	AUDIO_AUTO_CONTROL::CONTROL_RESULT;
	TRACK_COM::GET_AUDIO_PAN_X(TRACK_EVENT::TRACK_ID, AUDIO_AUTO_CONTROL::CONTROL_RESULT);
	return;
}

static AUDIO_TRACK PAN_X_TOUCH(bool)
{
	TRACK_COM::SET_PAN_X_TOUCH;
}

#endif
